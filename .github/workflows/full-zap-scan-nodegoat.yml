# full zap scan for OWASP nodegoat

name: Full ZAP Scan - NodeGoat

on:
  push:
    branches:
      - main
  workflow_dispatch:
  pull_request:

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  zap_full_scan:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Docker Compose
        uses: docker/setup-buildx-action@v3

      - name: Start NodeGoat and MongoDB with Compose
        uses: docker/compose-action@v3
        with:
          compose-file: docker-compose.yml
          services: nodegoat

      - name: Wait for NodeGoat to be ready
        run: |
          echo "Waiting for NodeGoat to start..."
          for i in {1..30}; do
            if curl -s http://localhost:4000 > /dev/null; then
              echo "NodeGoat is up!"
              exit 0
            fi
            echo "Still waiting..."
            sleep 5
          done
          echo "NodeGoat did not start in time"
          exit 1

      - name: Run ZAP Full Scan (HTML + JUnit XML)
        uses: zaproxy/action-full-scan@v0.11.0
        with:
          target: 'http://localhost:4000'
          fail_action: false
          cmd_options: '-a -x report_xml.xml -l WARN'
        continue-on-error: true

      - name: Upload ZAP Reports
        uses: actions/upload-artifact@v4
        with:
          name: full-zap-reports-nodegoat
          path: |
            report_html.html
            report_json.json
            report_md.md
            report_xml.xml
        continue-on-error: true

      - name: Publish ZAP JUnit Report
        uses: mikepenz/action-junit-report@v4
        with:
          report_paths: report_xml.xml
        continue-on-error: true
