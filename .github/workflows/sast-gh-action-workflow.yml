name: Reusable SAST Checkov GH actions Workflow
# https://github.com/marketplace/actions/checkov-github-action
on:
  workflow_call:
    inputs:
      scantool:
        type: string
        required: true
      language:
        type: string
        required: true
      project_dir:
        type: string
        required: true
      environment:
        type: string
        required: true
    secrets:
      SEMGREP_APP_TOKEN:
        required: false
      SONAR_TOKEN:
        required: false
      BEARER_TOKEN:
        required: false
      CODEQL_TOKEN:
        required: false
  workflow_dispatch:   # Allows you to run this workflow manually from the Actions tab

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  generate-timestamp:
    uses: ./.github/workflows/generate-timestamp.yml

#####################################################################
# ===================== GitHub Action SAST Scan =====================
#####################################################################

### the list to test with official github actions 
# Semgrep - multi lang
# Sonarqube - con Heavy setup, some paid features
# Bearer - multi lang
# CodeQL - multi lang

  semgrep:
    if: ${{ inputs.scantool == 'semgrep' }}
    uses: ./.github/workflows/sast-semgrep-workflow.yml
    with:
      language: ${{ inputs.language }}
      project_dir: ${{ inputs.project_dir }}
      environment: ${{ inputs.environment }}
    secrets:
      SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}

  sonarqube:
    if: ${{ inputs.scantool == 'sonarqube' }}
    uses: ./.github/workflows/sast-sonarcube-workflow.yml
    with:
      language: ${{ inputs.language }}
      project_dir: ${{ inputs.project_dir }}
      environment: ${{ inputs.environment }}
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  bearer:
    if: ${{ inputs.scantool == 'bearer' }}
    uses: ./.github/workflows/sast-bearer-workflow.yml
    with:
      language: ${{ inputs.language }}
      project_dir: ${{ inputs.project_dir }}
      environment: ${{ inputs.environment }}
    secrets:
      BEARER_TOKEN: ${{ secrets.BEARER_TOKEN }}

  codeql:
    if: ${{ inputs.scantool == 'codeql' }}
    uses: ./.github/workflows/sast-codeql-workflow.yml
    with:
      language: ${{ inputs.language }}
      project_dir: ${{ inputs.project_dir }}
      environment: ${{ inputs.environment }}
    secrets:
      CODEQL_TOKEN: ${{ secrets.CODEQL_TOKEN }}


  semgrep-fast-lightweight-scan-sarif-output:
    name: Semgrep SARIF Scan
    runs-on: ubuntu-latest
    needs: generate-timestamp
    container:
      image: semgrep/semgrep
    steps:
      - uses: actions/checkout@v4
      
      - name: Run Semgrep scan with SARIF output
        run: semgrep scan --config p/ci --sarif -o semgrep-results-${{ needs.generate-timestamp.outputs.timestamp }}.sarif --error
        continue-on-error: ${{ inputs.environment == 'non-prod' }}
        
      - name: Upload SARIF results
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-sarif-results
          path: semgrep-results-${{ needs.generate-timestamp.outputs.timestamp }}.sarif

      - name: Upload Semgrep SARIF to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep-results-${{ needs.generate-timestamp.outputs.timestamp }}.sarif

# https://semgrep.dev/orgs/- 
  semgrep-deep-scan:
    name: semgrep/ci deep scan SARIF output
    runs-on: ubuntu-latest
    needs: generate-timestamp
    continue-on-error: ${{ inputs.environment == 'non-prod' }}
    env:
      SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
    container:
      image: semgrep/semgrep
    steps:
    - uses: actions/checkout@v4
    - run: semgrep ci --sarif --output=semgrep-results-${{ needs.generate-timestamp.outputs.timestamp }}.sarif
    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: semgrep-results-${{ needs.generate-timestamp.outputs.timestamp }}.sarif
    


