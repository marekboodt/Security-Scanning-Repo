name: Reusable SAST Checkov GH actions Workflow
# https://github.com/marketplace/actions/checkov-github-action
on:
  workflow_call:
    inputs:
      type:
        type: string
        required: true
      language:
        type: string
        required: true
      project_dir:
        type: string
        required: true
      environment:
        type: string
        required: true
    secrets:
      token:
        required: false
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  generate-timestamp:
    uses: ./.github/workflows/generate-timestamp.yml

#####################################################################
# ===================== GitHub Action SAST Scan =====================
#####################################################################

### the list to test with official github actions 
# Semgrep - multi lang
# Sonarqube - con Heavy setup, some paid features
# Bearer - multi lang
# CodeQL - multi lang

  semgrep-normal-scan:
    name: semgrep/ci
    runs-on: ubuntu-latest
    needs: generate-timestamp
    container:
      # A Docker image with Semgrep installed. Do not change this.
      image: semgrep/semgrep
    # Skip any PR created by dependabot to avoid permission issues:
    if: (github.actor != 'dependabot[bot]')
    steps:
      - uses: actions/checkout@v4
      # Run the "semgrep ci" command on the command line of the docker image.
      - run: semgrep scan --config p/ci
      # - run: semgrep ci
      #  env:
          # Connect to Semgrep AppSec Platform through your SEMGREP_APP_TOKEN.
          # Generate a token from Semgrep AppSec Platform > Settings
          # and add it to your GitHub secrets.
      #    SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}

  semgrep-sarif-output:
    name: Semgrep SARIF Scan
    runs-on: ubuntu-latest
    needs: generate-timestamp
    container:
      image: semgrep/semgrep
    steps:
      - uses: actions/checkout@v4
      
      - name: Run Semgrep scan with SARIF output
        run: semgrep scan --config p/ci --sarif -o semgrep-results-${{ needs.generate-timestamp.outputs.timestamp }}.sarif
      
      - name: Upload SARIF results
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-sarif-results
          path: semgrep-results-${{ needs.generate-timestamp.outputs.timestamp }}.sarif

      - name: Upload Semgrep SARIF to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep-results-${{ needs.generate-timestamp.outputs.timestamp }}.sarif

