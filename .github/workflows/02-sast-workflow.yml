name: Reusable SAST Checkov GH actions Workflow
# https://github.com/marketplace/actions/checkov-github-action
on:
  workflow_call:
    inputs:
      sast-scan-tool: { type: string, required: true }
      language: { type: string, required: false }
      project_dir: { type: string, required: true }
      environment: { type: string, required: true }
    secrets:
      SEMGREP_APP_TOKEN: { required: false }
      SONAR_TOKEN: { required: false }
      SONAR_HOST_URL: { required: false }
  workflow_dispatch:   # Allows you to run this workflow manually from the Actions tab

permissions:
  actions: read
  contents: read
  security-events: write

#####################################################################
# ===================== GitHub Action SAST Scan =====================
#####################################################################
### the list to test with official github actions 
# Semgrep - multi lang - best result WITH the key
# Bearer - multi lang - okay-ish outcome
# CodeQL - multi lang - okay-ish outcome
# Sonarqube - multi lang - not set up yet
jobs:
  Semgrep-Scan:
    if: ${{ inputs.sast-scan-tool == 'semgrep' }}
    uses: ./.github/workflows/sast-semgrep-workflow.yml
    with:
      sast-scan-tool: ${{ inputs.sast-scan-tool }}
#      language: ${{ inputs.language }}
      project_dir: ${{ inputs.project_dir }}
      environment: ${{ inputs.environment }}
    secrets:
      SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}

  CodeQL-Scan:
    if: ${{ inputs.sast-scan-tool == 'codeql' }}
    uses: ./.github/workflows/sast-codeql-workflow.yml
    with:
      sast-scan-tool: ${{ inputs.sast-scan-tool }}
      language: ${{ inputs.language }}
      project_dir: ${{ inputs.project_dir }}
      environment: ${{ inputs.environment }}

  Bearer-Scan:
    if: ${{ inputs.sast-scan-tool == 'bearer' }}
    uses: ./.github/workflows/sast-bearer-workflow.yml
    with:
      sast-scan-tool: ${{ inputs.sast-scan-tool }}
#      language: ${{ inputs.language }}
      project_dir: ${{ inputs.project_dir }}
      environment: ${{ inputs.environment }}

