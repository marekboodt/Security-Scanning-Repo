name: Reusable IAC Workflow

on:
  workflow_call:
    inputs:
      language:
        type: string
        required: true
      project_dir:
        type: string
        required: true
      environment:
        type: string
        required: true
    secrets:
      token:
        required: false
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  iac-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Project Repository - IAC
        uses: actions/checkout@v3

      # this tells the workflow to fetch files from the public 
      - name: Checkout Security-Scanning-Repo
        uses: actions/checkout@v3
        with:
          repository: marekboodt/Security-Scanning-Repo
          # specifies the directory where the repository will be cloned in the runner's workspace. path: security-scanning -- add same path later at name: Run SAST script
          path: security-scanning

      - name: Run IaC scripts
        run: |
          bash security-scanning/scripts/03-IAC/${{ inputs.language }}-iac.sh ${{ inputs.project_dir }} ${{ inputs.environment }}
#        continue-on-error: true
        # If inputs.environment is 'non-prod', the pipeline will continue even if ./run-tests.sh fails. 
        # If inputs.environment is not 'non-prod' (e.g., 'prod'), the pipeline will stop if ./run-tests.sh fails
        continue-on-error: ${{ inputs.environment == 'non-prod' }}

#      - name: Save Terrascan AWS JSON Output as Artifact
#        if: always()
#         uses: actions/upload-artifact@v4
#        with:
#          name: ${{ env.TERRASCAN_AWS_OUTPUT_FILE }}
#          path: ${{ env.TERRASCAN_AWS_OUTPUT_FILE }}
      
#       - name: Save Terrascan Azure JSON Output as Artifact
#        if: always()
#        uses: actions/upload-artifact@v4
#        with:
#          name: ${{ env.TERRASCAN_AZURE_OUTPUT_FILE }}
#          path: ${{ env.TERRASCAN_AZURE_OUTPUT_FILE }}
      
#      - name: Save Terrascan GCP JSON Output as Artifact
#        if: always()
#        uses: actions/upload-artifact@v4
#        with:
#          name: ${{ env.TERRASCAN_GCP_OUTPUT_FILE }}
#          path: ${{ env.TERRASCAN_GCP_OUTPUT_FILE }}
      
#      - name: Save TFLint JSON Output as Artifact
#        if: always()
#        uses: actions/upload-artifact@v4
#        with:
#          name: ${{ env.TFLINT_FILENAME }}
#          path: ${{ env.TFLINT_OUTPUT_FILE }}
      
      - name: Save All IaC Scan Results as Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}  # Folder name as artifact name
          path: ${{ env.SCAN_RESULTS_DIR }}  # Upload the entire folder
          # if-no-files-found: warn  # Prevent failure if the folder is empty
          if-no-files-found: ignore  # Avoids failure if all files were removed

            
