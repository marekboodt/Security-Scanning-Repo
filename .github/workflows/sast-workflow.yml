name: Reusable SAST Workflow

on:
  workflow_call:
    inputs:
      language:
        type: string
        required: true
      project_dir:
        type: string
        required: true
      environment:
        type: string
        required: true
    secrets:
      token:
        required: false

jobs:
  sast-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Django Repository
        uses: actions/checkout@v3

      # this tells the workflow to fetch files from the public 
      - name: Checkout Security-Scanning-Repo
        uses: actions/checkout@v3
        with:
          repository: marekboodt/Security-Scanning-Repo
          # specifies the directory where the repository will be cloned in the runner's workspace. path: security-scanning -- add same path later at name: Run SAST script
          path: security-scanning

#      - name: Debug File Structure
#        run: |
#          echo "Root Directory:"
#          ls -R
#          echo "Security-Scanning-Repo Directory:"
#          ls -R security-scanning

      - name: Run SAST script
        run: |
          bash security-scanning/scripts/02-SAST/${{ inputs.language }}-sast.sh ${{ inputs.project_dir }}
#        continue-on-error: true
        # If inputs.environment is 'non-prod', the pipeline will continue even if ./run-tests.sh fails. 
        # If inputs.environment is not 'non-prod' (e.g., 'prod'), the pipeline will stop if ./run-tests.sh fails
        continue-on-error: ${{ inputs.environment == 'non-prod' }}


